name: ci-backend
# TODO: replace secrets.DATABASE_URL with secrets.DATABASE_URL-$GITHUB-REF-NAME
on:
  push:
    # b/server/add-assets-crud
    # b/server/fix-auth
    branches: ["main", "dev", "b/**"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_test_deploy:
      # To use Remote Caching, uncomment the next lines and follow the steps below.
      env:
        TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
        TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
        DATABASE_URL_PROD: ${{ secrets.DATABASE_URL_PROD }}
        DATABASE_URL_MOCK: ${{ secrets.DATABASE_URL_MOCK }}

      name: Build test and deploy backend
      timeout-minutes: 15
      runs-on: ${{ matrix.os }}

      strategy:
        matrix:
          os: [ubuntu-latest]

      steps:

        - name: Sets env vars for production
          run: |
            echo "DATABASE_URL=$DATABASE_URL_PROD" >> $GITHUB_ENV
          if: ${{ github.ref_name == 'main' }}

        - name: Sets env vars for side branches
          run: |
            echo "DATABASE_URL=$DATABASE_URL_MOCK" >> $GITHUB_ENV
          if: ${{ github.ref_name != 'main' }}

        - name: Check out code
          uses: actions/checkout@v2
          with:
            fetch-depth: 2

        - name: Setup Node.js environment
          uses: actions/setup-node@v2
          with:
            node-version: 16
            cache: 'yarn'

        - name: Cleanup unnecesary packages for build
          run: rm -rf frontend .github

        - name: Install dependencies
          run: yarn
        
        - id: changes
          name: File Changes
          uses: tj-actions/changed-files@v23

        - name: Ouput Changed files
          run: |
            for file in ${{ steps.changes.outputs.all_changed_files }}; do
              echo $file
            done

        - name: Build and test db
          if: contains(steps.changes.outputs.all_changed_files, 'backend/db/')
          run: yarn db build && yarn db test

        - name: Create Procfile
          uses: "finnp/create-file-action@master"
          env:
            FILE_NAME: "Procfile"
            FILE_DATA: "web: yarn server prod"

        - name: Build, test and deploy server
          if: contains(steps.changes.outputs.all_changed_files, 'backend/server/') || contains(steps.file_changes.outputs.files , '"backend/db/')
          run: |
              yarn db build
              yarn server build && yarn server test
              zip -9 -r deploy.zip .
          
        - name: Deploy to Beanstalk
          if: contains(steps.changes.outputs.all_changed_files, 'backend/server/') || contains(steps.file_changes.outputs.files , '"backend/db/')
          uses: einaregilsson/beanstalk-deploy@v18
          with:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            application_name: monolitik-server
            environment_name: Monolitikserver-env
            version_label: '${{ github.ref_name }}@${{ github.sha }}'
            region: us-east-1
            use_existing_version_if_available: true
            deployment_package: deploy.zip