/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides
} from 'ethers'
import {
  Provider,
  TransactionRequest
} from '@ethersproject/providers'
import type {
  TokenizedAsset,
  TokenizedAssetInterface
} from '../TokenizedAsset'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string'
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string'
      },
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: '_supply',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256'
      }
    ],
    name: 'Approval',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address'
      }
    ],
    name: 'OwnershipTransferred',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256'
      }
    ],
    name: 'Transfer',
    type: 'event'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      }
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256'
      }
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256'
      }
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'supply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address'
      }
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  }
]

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001ebd38038062001ebd833981810160405281019062000037919062000451565b838381600390805190602001906200005192919062000301565b5080600490805190602001906200006a92919062000301565b5050506200008d62000081620000b060201b60201c565b620000b860201b60201c565b6200009f82826200017e60201b60201c565b80600681905550505050506200080e565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001f1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001e89062000527565b60405180910390fd5b6200020560008383620002f760201b60201c565b8060026000828254620002199190620005d6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002709190620005d6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002d7919062000549565b60405180910390a3620002f360008383620002fc60201b60201c565b5050565b505050565b505050565b8280546200030f90620006a7565b90600052602060002090601f0160209004810192826200033357600085556200037f565b82601f106200034e57805160ff19168380011785556200037f565b828001600101855582156200037f579182015b828111156200037e57825182559160200191906001019062000361565b5b5090506200038e919062000392565b5090565b5b80821115620003ad57600081600090555060010162000393565b5090565b6000620003c8620003c2846200058f565b62000566565b905082815260208101848484011115620003e157600080fd5b620003ee84828562000671565b509392505050565b6000815190506200040781620007da565b92915050565b600082601f8301126200041f57600080fd5b815162000431848260208601620003b1565b91505092915050565b6000815190506200044b81620007f4565b92915050565b600080600080608085870312156200046857600080fd5b600085015167ffffffffffffffff8111156200048357600080fd5b62000491878288016200040d565b945050602085015167ffffffffffffffff811115620004af57600080fd5b620004bd878288016200040d565b9350506040620004d087828801620003f6565b9250506060620004e3878288016200043a565b91505092959194509250565b6000620004fe601f83620005c5565b91506200050b82620007b1565b602082019050919050565b620005218162000667565b82525050565b600060208201905081810360008301526200054281620004ef565b9050919050565b600060208201905062000560600083018462000516565b92915050565b60006200057262000585565b9050620005808282620006dd565b919050565b6000604051905090565b600067ffffffffffffffff821115620005ad57620005ac62000771565b5b620005b882620007a0565b9050602081019050919050565b600082825260208201905092915050565b6000620005e38262000667565b9150620005f08362000667565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000628576200062762000713565b5b828201905092915050565b6000620006408262000647565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156200069157808201518184015260208101905062000674565b83811115620006a1576000848401525b50505050565b60006002820490506001821680620006c057607f821691505b60208210811415620006d757620006d662000742565b5b50919050565b620006e882620007a0565b810181811067ffffffffffffffff821117156200070a576200070962000771565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620007e58162000633565b8114620007f157600080fd5b50565b620007ff8162000667565b81146200080b57600080fd5b50565b61169f806200081e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610278578063a9059cbb146102a8578063dd62ed3e146102d8578063f2fde38b14610308576100f5565b806370a0823114610202578063715018a6146102325780638da5cb5b1461023c57806395d89b411461025a576100f5565b806318160ddd116100d357806318160ddd1461016657806323b872dd14610184578063313ce567146101b457806339509351146101d2576100f5565b8063047fc9aa146100fa57806306fdde0314610118578063095ea7b314610136575b600080fd5b610102610324565b60405161010f91906111ef565b60405180910390f35b61012061032a565b60405161012d91906110ad565b60405180910390f35b610150600480360381019061014b9190610e8b565b6103bc565b60405161015d9190611092565b60405180910390f35b61016e6103df565b60405161017b91906111ef565b60405180910390f35b61019e60048036038101906101999190610e3c565b6103e9565b6040516101ab9190611092565b60405180910390f35b6101bc610418565b6040516101c9919061120a565b60405180910390f35b6101ec60048036038101906101e79190610e8b565b610421565b6040516101f99190611092565b60405180910390f35b61021c60048036038101906102179190610dd7565b610458565b60405161022991906111ef565b60405180910390f35b61023a6104a0565b005b610244610528565b6040516102519190611077565b60405180910390f35b610262610552565b60405161026f91906110ad565b60405180910390f35b610292600480360381019061028d9190610e8b565b6105e4565b60405161029f9190611092565b60405180910390f35b6102c260048036038101906102bd9190610e8b565b61065b565b6040516102cf9190611092565b60405180910390f35b6102f260048036038101906102ed9190610e00565b61067e565b6040516102ff91906111ef565b60405180910390f35b610322600480360381019061031d9190610dd7565b610705565b005b60065481565b6060600380546103399061131f565b80601f01602080910402602001604051908101604052809291908181526020018280546103659061131f565b80156103b25780601f10610387576101008083540402835291602001916103b2565b820191906000526020600020905b81548152906001019060200180831161039557829003601f168201915b5050505050905090565b6000806103c76107fd565b90506103d4818585610805565b600191505092915050565b6000600254905090565b6000806103f46107fd565b90506104018582856109d0565b61040c858585610a5c565b60019150509392505050565b60006012905090565b60008061042c6107fd565b905061044d81858561043e858961067e565b6104489190611241565b610805565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104a86107fd565b73ffffffffffffffffffffffffffffffffffffffff166104c6610528565b73ffffffffffffffffffffffffffffffffffffffff161461051c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105139061116f565b60405180910390fd5b6105266000610cdd565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105619061131f565b80601f016020809104026020016040519081016040528092919081815260200182805461058d9061131f565b80156105da5780601f106105af576101008083540402835291602001916105da565b820191906000526020600020905b8154815290600101906020018083116105bd57829003601f168201915b5050505050905090565b6000806105ef6107fd565b905060006105fd828661067e565b905083811015610642576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610639906111cf565b60405180910390fd5b61064f8286868403610805565b60019250505092915050565b6000806106666107fd565b9050610673818585610a5c565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61070d6107fd565b73ffffffffffffffffffffffffffffffffffffffff1661072b610528565b73ffffffffffffffffffffffffffffffffffffffff1614610781576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107789061116f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e8906110ef565b60405180910390fd5b6107fa81610cdd565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c906111af565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc9061110f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109c391906111ef565b60405180910390a3505050565b60006109dc848461067e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a565781811015610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f9061112f565b60405180910390fd5b610a558484848403610805565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610acc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac39061118f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b33906110cf565b60405180910390fd5b610b47838383610da3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc49061114f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c609190611241565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cc491906111ef565b60405180910390a3610cd7848484610da8565b50505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081359050610dbc8161163b565b92915050565b600081359050610dd181611652565b92915050565b600060208284031215610de957600080fd5b6000610df784828501610dad565b91505092915050565b60008060408385031215610e1357600080fd5b6000610e2185828601610dad565b9250506020610e3285828601610dad565b9150509250929050565b600080600060608486031215610e5157600080fd5b6000610e5f86828701610dad565b9350506020610e7086828701610dad565b9250506040610e8186828701610dc2565b9150509250925092565b60008060408385031215610e9e57600080fd5b6000610eac85828601610dad565b9250506020610ebd85828601610dc2565b9150509250929050565b610ed081611297565b82525050565b610edf816112a9565b82525050565b6000610ef082611225565b610efa8185611230565b9350610f0a8185602086016112ec565b610f13816113af565b840191505092915050565b6000610f2b602383611230565b9150610f36826113c0565b604082019050919050565b6000610f4e602683611230565b9150610f598261140f565b604082019050919050565b6000610f71602283611230565b9150610f7c8261145e565b604082019050919050565b6000610f94601d83611230565b9150610f9f826114ad565b602082019050919050565b6000610fb7602683611230565b9150610fc2826114d6565b604082019050919050565b6000610fda602083611230565b9150610fe582611525565b602082019050919050565b6000610ffd602583611230565b91506110088261154e565b604082019050919050565b6000611020602483611230565b915061102b8261159d565b604082019050919050565b6000611043602583611230565b915061104e826115ec565b604082019050919050565b611062816112d5565b82525050565b611071816112df565b82525050565b600060208201905061108c6000830184610ec7565b92915050565b60006020820190506110a76000830184610ed6565b92915050565b600060208201905081810360008301526110c78184610ee5565b905092915050565b600060208201905081810360008301526110e881610f1e565b9050919050565b6000602082019050818103600083015261110881610f41565b9050919050565b6000602082019050818103600083015261112881610f64565b9050919050565b6000602082019050818103600083015261114881610f87565b9050919050565b6000602082019050818103600083015261116881610faa565b9050919050565b6000602082019050818103600083015261118881610fcd565b9050919050565b600060208201905081810360008301526111a881610ff0565b9050919050565b600060208201905081810360008301526111c881611013565b9050919050565b600060208201905081810360008301526111e881611036565b9050919050565b60006020820190506112046000830184611059565b92915050565b600060208201905061121f6000830184611068565b92915050565b600081519050919050565b600082825260208201905092915050565b600061124c826112d5565b9150611257836112d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561128c5761128b611351565b5b828201905092915050565b60006112a2826112b5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561130a5780820151818401526020810190506112ef565b83811115611319576000848401525b50505050565b6000600282049050600182168061133757607f821691505b6020821081141561134b5761134a611380565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61164481611297565b811461164f57600080fd5b50565b61165b816112d5565b811461166657600080fd5b5056fea26469706673582212203b56ab497ce650b411a4380fcca0e94cb8e501477bed804cce0eb17b7cda8f1464736f6c63430008040033'

export class TokenizedAsset__factory extends ContractFactory {
  constructor(
    ...args:
      | [signer: Signer]
      | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _recipient: string,
    _supply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenizedAsset> {
    return super.deploy(
      _name,
      _symbol,
      _recipient,
      _supply,
      overrides || {}
    ) as Promise<TokenizedAsset>
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _recipient: string,
    _supply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _recipient,
      _supply,
      overrides || {}
    )
  }
  attach(address: string): TokenizedAsset {
    return super.attach(address) as TokenizedAsset
  }
  connect(signer: Signer): TokenizedAsset__factory {
    return super.connect(signer) as TokenizedAsset__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): TokenizedAssetInterface {
    return new utils.Interface(_abi) as TokenizedAssetInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenizedAsset {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenizedAsset
  }
}
